<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="UTF-8">
	<meta http-equiv="X-UA-Compatible" content="IE=edge">
	<meta name="viewport" content="width=device-width, initial-scale=1.0">
	<title>iVoteBallot | Alabama Reset Password</title>

	<link rel="stylesheet" type="text/css" href="../styles/alabama_ResetPassword_01.css" />

</head>

<!--
	The Developer, Sarai Hannah Ajai have written her HTML and JavaScript codes languages for the
	Alabama_ResetPassword_01.ejs file that serves, as a front-end interface for users to reset
    their passwords onto the iVoteBallot website or web application based in the state of 
	Alabama. Its primary purpose is to provide a user-friendly and secure method for individuals
	who have forgotten their passwords or need to change them for security reasons.

	When an users access the Alabama_ResetPassword_01.ejs web page, the users are presented with
	a straightforward and intuitive layout that guides them through the password reset process. 
	The ForgotPassword_Alabama_01.ejs web page typically include an input field where an users 
	can enter their email address associated with their account. This information is crucial for
    identifying the user and ensuring that the password reset request is valid.

	Once, the users submits their email address, the verifyTempPwdLogIn_Alabama_01 web page will
	initiates the users to entering in their email address and temporary reset password link 
	procedure. This will involves after sending a verification code reset link to the user's registered 
	email address. The verifyTempPwdLogIn_Alabama_01 web page may also display a confirmation
	message, assuring the users that the password reset requests has been received and further
	instructions will be provided to the users' email account.

	After receiving the verification code reset link, the user is directed to the 
	Alabama_ResetPassword_01.ejs web page; in order to input the necessary information. This
	includes the users entering their new password and confirm password security measures 
	requirements. Furthermore, the Alabama_ResetPassword_01.ejs web page ensures that the 
	user's inputs are securely transmitted and processed, protecting their sensitive information
	by ways of Nodejs Express' Passport, Session and Bcrypt algorithm languages libraries.

	In summary, the Alabama_ResetPassword_01.ejs web page acts, as an users interface for the 
	new password and confirm password reset process. It provides an accessible and user-friendly
	environment for individuals to reset their passwords, ensuring the security of their accounts
	and safeguarding their personal information throughout the procedure.	
-->

	<body>

		<header>
			<%- include('../common/header') %>
		</header>

		<div id="flex_Container">
			<div id="flex_Container_Row">
				<div id="flex_Container_Column">
					<div id="first_Column">

						<div id="popUpResetPasswordMenu" class="resetPassword_Form_01"></div>

							<form class="form_ResetPassword_01 animate" name="resetPasswordForm" onsubmit="return validateResetPasswordForm()" action="/signUporLogIn_01" method="POST">							

								<div class="resetPassword_Container_01">

									<br>

									<p id="titleResetPassword_01"> Reset Password | Alabama</p>

									<label for="password">New Password | </label>					
									<input id="reset_Password_01" type="password" name="userPassword" value="" maxlength="250" >
									<span id = "userReset_Password_01ErrorMessage"></span>								
									<a id="showHideReset_Password_01" href="#" onclick="toggle_InputPasswordCheckBox_ResetPassword_01()">Show Password </a>
									
									<br>
									<br>
									
									<label for="confirmPassword">New Confirm Password | </label>					
									<input id="reset_ConfirmPassword_01" type="password" name="userConfirmPassword" maxlength="250" >
									<span id = "userReset_ConfirmPassword_01ErrorMessage"></span>								
									<a id="showHideReset_ConfirmPassword_01" href="#" onclick="toggle_InputPasswordCheckBox_Reset_ConfirmPassword_01()">Show Password </a>
									
									<br>
									<br>
									<hr class="hr_Red_line_01">
								
									<p id="memberQuestion_01">
										Are you already an iVoteBallot's member?
										<a class="forgotPassword_01" href="http://localhost:8080/signUporLogIn_01">Access your account.</a>
									</p>

									<hr id="hr_Blue_line_02">

									<p id="memberQuestion_01">
										New to iVoteBallot platform? 
										<a class="forgotPassword_01" href="http://localhost:8080/signUporLogIn_01">Sign Up for an Account.</a>
									</p>								
									
									<br>
								
									<button id="resetPasswordSubmitButton" type="submit">Continue</button>
									
								</div>
								<br>

								<div class="resetPassword_Container_01" style="background-color:#f1f1f1">
									<a id="cancelButton_01" href="http://localhost:8080/signUporLogIn_01">
										<button class="cancelButtonResetPassword_01" type="button">Cancel</button>
									</a>
								</div>
							</form>
						</div>
					</div>
				</div>
			</div>
		</div>

		<footer>
			<%- include('../common/footer') %>
		</footer>

		<script>

			function toggle_InputPasswordCheckBox_ResetPassword_01() {
				const inputPassword_ResetPassword_01 = document.getElementById('reset_Password_01');
				const userShowHide_ResetPassword_01 = document.getElementById('showHideReset_Password_01');

					if (userShowHide_ResetPassword_01.innerText === 'Show Password') {
						inputPassword_ResetPassword_01.setAttribute('type', 'text');
						userShowHide_ResetPassword_01.innerText = ('Hide Password');
					} else {
						inputPassword_ResetPassword_01.setAttribute('type', 'password');
						userShowHide_ResetPassword_01.innerText = 'Show Password';
					}
			}

			function toggle_InputPasswordCheckBox_Reset_ConfirmPassword_01() {
				const inputPassword_ResetPassword_01 = document.getElementById('reset_ConfirmPassword_01');
				const userShowHide_ResetPassword_01 = document.getElementById('showHideReset_ConfirmPassword_01');

					if (userShowHide_ResetPassword_01.innerText === 'Show Password') {
						inputPassword_ResetPassword_01.setAttribute('type', 'text');
						userShowHide_ResetPassword_01.innerText = ('Hide Password');
					} else {
						inputPassword_ResetPassword_01.setAttribute('type', 'password');
						userShowHide_ResetPassword_01.innerText = 'Show Password';
					}
			}

			const validateResetPasswordForm = (e) => { 

				const userReset_Password_01 = document.getElementById('reset_Password_01').value.trim();
				const userReset_ConfirmPassword_01 = document.getElementById('reset_ConfirmPassword_01').value.trim();
				const regExPassword = /^(?=.*\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[^a-zA-Z0-9])(?!.*\s).{8,32}$/;

				if (userReset_Password_01 === '' || userReset_Password_01 == null || userReset_Password_01.length <= 7 || !userReset_Password_01.match(regExPassword)) {
					document.getElementById('userReset_Password_01ErrorMessage').textContent = 'Your password is a required input field and you must enter the correct password format into the require input field.';

					setTimeout(function() {
						document.getElementById('userReset_Password_01ErrorMessage').textContent = '';
					},
					9000)

				return false;

				}

				if (userReset_ConfirmPassword_01 === '' || userReset_ConfirmPassword_01 == null || userReset_ConfirmPassword_01.length <= 7 || !userReset_ConfirmPassword_01.match(regExPassword)) {
					document.getElementById('userReset_ConfirmPassword_01ErrorMessage').textContent = 'Your password is a required input field and you must enter the correct password format into the require input field.';

					setTimeout(function() {
						document.getElementById('userReset_ConfirmPassword_01ErrorMessage').textContent = '';
					},
					9000)

				return false;

				}

				if (userReset_Password_01 != userReset_ConfirmPassword_01) {
					document.getElementById('userReset_ConfirmPassword_01ErrorMessage').textContent = 'Your password does not match to your confirm password which are required input fields.';

					setTimeout(function() {
						document.getElementById('userReset_ConfirmPassword_01ErrorMessage').textContent = '';
					},
					9000)

					return false;

				}

				e.preventDefault();  
							
                form.addEventListener('submit', validateLogInForm);

                return true;         

			} 


			

		</script>
		
	</body>
</html>