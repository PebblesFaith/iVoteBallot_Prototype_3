/*
    This CSS style language codes defines a custom font family called "Megrim-Regular"
    and specifies the path for the font file in the "src" property. The "font-weight"
    property sets the font weight to "normal."
*/
@font-face {
	font-family: "Megrim-Regular";
	src: url(../fonts/Source_Code_Pro/SourceCodePro-SemiBold.ttf) format('truetype');
	font-weight: normal;
  }
  
  /*
	  The CSS styles in this code block are used to create a flexible container with a red
	  background color, center-aligned content, and a row direction. The "flex-wrap: wrap"
	  property allows the container to wrap its items onto multiple lines if necessary. The
	  "align-items: center" and "justify-content: center" properties ensure that the items are
	  both vertically and horizontally centered within the container.
  */
  #flex_Container {
	display: flex;
	flex-wrap: wrap;
	flex-direction: row;
	background-color: rgb(201, 24, 24);
	align-items: center;
	justify-content: center;
  }
  
  /*
	This CSS style defines a flexible container with a horizontal layout that wraps its content
	if necessary. It also sets the container to stretch its items to fit the full width of the
	container. Overall, this style is designed to create a responsive and adaptive layout for
	web page elements.
  */
  #flex_Container_Row {
	display: flex;
	flex-direction: row;    
	flex-wrap: wrap;
	align-items: stretch;
	width: 100%;
  }
  
  /*
	The CSS code style aims to apply the flexbox layout to all direct child div elements of a
	container with an ID of "flex_Container_Row". The "flex: 1" property assigns equal flex grow
	value to each child element, allowing them to fill the available horizontal space evenly.
  */
  #flex_Container_Row > div {
	display: flex;
	flex: 1;  
  }
  
  /*
	The CSS style defines how to create a flex container with a column layout. The "display:
	flex" property specifies that the container should use flexbox layout, while "flex-direction:
	column" arranges the flex items vertically. Finally, "flex-basis: 100%" sets the initial size
	of the flex items to 100% of the container's width.
  */
  #flex_Container_Column {
	display: flex;
	flex-direction: column;
	flex-basis: 100%;  
  }
  
  /*
	This CSS style is used to create a flexible layout with a container element and multiple
	child elements displayed as columns. The "flex" property is used to distribute the available
	space among the child elements evenly, and the "display" property is set to "flex" to enable
	flexbox layout.
  */
  #flex_Container_Column > div {
	display: flex;
	flex: 1;
  }
  
  /*
	The CSS style code sets the properties of an HTML element with the ID "first_Column" to create
	a flexible container that wraps its contents in a column layout. The style also defines the
	background color, height, width, text alignment, margin, padding, font family, size, and color
	of the element, as well as its content justification and absence of a border.
  */
  #first_Column {
	display: flex;
	flex-wrap: row wrap;
	flex-direction: column;
	background-color: rgb(255, 255, 255); 
	text-align: left;
	font-family: 'Megrim-Regular', Cambria, Cochin, Georgia, Times, 'Times New Roman', serif;
	font-size: clamp(12px, 2vw, 16px);
	color: rgb(13, 65, 255);  
	justify-content: left;  
	border: none;
}

/*
    The CSS style language codes sets a red solid border for an HTML element identified
    by "hr_Red_line_01", while removing the left and right borders. Additionally, it adds
    a top and bottom margin of 5 pixels to the element. This styling is used to
    create a visual separation between sections on the webpage.
*/
.hr_Red_line_01 {
	border-color: rgb(201, 24, 24); 
	border-style: solid;
	border-left: none;
	border-right: none;
	margin-top: 5px;
	margin-bottom: 5px;
}

/*
    The CSS style language codes sets a blue solid border for an HTML element identified
    by "hr_Blue_line_02", while removing the left and right borders. Additionally, it adds
    a top and bottom margin of 5 pixels to the element. This styling is used to
    create a visual separation between sections on the webpage.
*/
#hr_Blue_line_02 {
    border-color: rgb(13, 65, 255); 
    border-style: solid;
    border-left: none;
    border-right: none;
    margin-top: 5px;
    margin-bottom: 5px;
}

/*
    The CSS statement sets the display property of the label element to inline-block, 
    which allows it to be displayed inline with other elements while still retaining its
    block-level characteristics, such as the ability to set a width. It also sets the
    width property to 80%, which specifies the width of the element relative to its containing 
    block, and the text-align property to left, which aligns the text content of the label 
    element to the left of the element's box.
*/
label {
	display: flex;
	flex-wrap: row wrap;
	flex-direction: column;
	font-family: 'Megrim-Regular', Cambria, Cochin, Georgia, Times, 'Times New Roman', serif;
	font-size: clamp(12px, 2vw, 16px); 
	color: rgb(13, 65, 255); 
	background-color: inherit;
	white-space: normal;  
	margin-left: 15px;
	margin-right: 15px;
}

/*
    This CSS code sets various styles for input elements. It hides the top, right, and left 
    borders of the input element, while giving the bottom border a solid style with a blue 
    color. The text color is set to a shade of blue, and the background color is set to 
    inherit from the parent element. The input element is given a width of 100% of its parent
    container, with a 5px margin to the right and bottom. Finally, the border color of the 
    input element is set to the same shade of blue used for the text.

    The CSS statement sets the outline property of multiple HTML elements (identified by their
    ID attributes) to none. This means that when any of these elements receive focus (for
    example, when the user clicks on HTML element), no visible outline will be displayed around
    them. And, this can be useful to improve the visual appearance of a web page, as some 
    browsers may add default outlines that can be distracting or clash with the page design.
*/
#emailForgotPassword_01 {
	outline: none; 
	border-top-style: hidden;
	border-right-style: hidden;
	border-left-style: hidden;
	border-bottom-style: solid;
	color: rgb(13, 65, 255);
	background-color: inherit;
	width: 95%;    
	margin-top: 5px; 
	margin-right: 15px;   
	margin-bottom: 5px;
	margin-left: 15px;
	border-color: rgb(13, 65, 255);
	font-family: 'Megrim-Regular', Cambria, Cochin, Georgia, Times, 'Times New Roman', serif;
	font-size: clamp(12px, 2vw, 16px);
	cursor: pointer;
	cursor: 14px;  	
}
 
/*
    The CSS statement applies several styling rules to a group of HTML elements with the ID
    "emailForgotPassword_01". And, the HTML element sets the display property to flex and 
	applies a row wrap layout with a column direction. As well as, the HTML element, also	
	specifies the font family, font size, text color, and white space properties. Finally, 
	it sets the background color to inherit from the parent element.
*/
#emailForgotPassword_01 {
	display: flex;
	flex-wrap: row wrap;
	flex-direction: column;
	font-family: Cambria, Cochin, Georgia, Times, 'Times New Roman', serif;
	font-size: clamp(12px, 2vw, 16px); 
	color: rgb(13, 65, 255); 
	background-color: inherit;
	white-space: normal;	
}  

/*
    The CSS code sets a transition effect for the properties of the HTML element with ID
    "emailForgotPassword_01". The transition effect will last for 0.5 seconds 
    and will be applied when there is a change in the properties of the element.

    The "-webkit-transition" property sets the transition effect for browsers that use 
	the WebKit rendering engine (such as Safari and Chrome), while the "transition" property
	sets the transition effect for other browsers.
*/
#emailForgotPassword_01 {
	-webkit-transition: 0.5s;
	transition: 0.5s;
}

/*
    This CSS statement applies a styling to the HTML element that includes the ID 
    #emailForgotPassword_01 when the element is in focus. When the element receive
	focus, a 3-pixel border with a solid bottom and hidden top, right, and left sides
    are applied, along with a slightly transparent background color. And, the width of
    the element is set to 75%.
*/
#emailForgotPassword_01:focus {
	border:3px solid rgb(205, 214, 249);
	border-top-style: hidden;
	border-right-style: hidden;
	border-left-style: hidden;
	border-bottom-style: solid;
	background-color: rgba(205, 220, 235, 0.20);    
	width: 75%;  
}
 
/*
    The CSS statement sets the font family to be used for the element with the IDs 
    "userEmailForgotPassword_01ErrorMessage". It also sets the font size to be responsive
	to the viewport width, with a range of 9px to 13px. The color of the text is set to a
	shade of red, and the text alignment is set to left. Additionally, the white-space
	property is set to normal, which allows the text to wrap according to the width of 
	the container.
*/
#userEmailForgotPassword_01ErrorMessage { 
	font-family: Cambria, Cochin, Georgia, Times, 'Times New Roman', serif;
	font-size: clamp(9px, 2vw, 13px); 
	color: rgb(201, 24, 24);    
	text-align: left;
	white-space: normal; 
	margin-left: 15px;
	margin-right: 15px;
	overflow: hidden;
	word-wrap: break-word;
}

/*
	The #forgotPasswordSubmitButton statement is a CSS selector that targets an element with 
	the ID "forgotPasswordSubmitButton". It applies several styling rules to this element, 
	including making it a block-level element, setting its height to 40 pixels, making it 
	occupy the full width of its container, giving it a background color of dark red (rgb(201, 
	24, 24)), applying a font family stack of Cambria, Cochin, Georgia, Times, 'Times New Roman', 
	serif, setting the text color to white, setting the font size to a responsive value that 
	adjusts based on the viewport width, centering the text within the button, and removing the
	border.
*/
#forgotPasswordSubmitButton {
	display: block;
	height: 40px;
	width: 100%;
	background-color: rgb(201, 24, 24);
	font-family: Cambria, Cochin, Georgia, Times, 'Times New Roman', serif;
	color: rgb(255, 255, 255);
	font-size: clamp(12px, 2vw, 16px);
	text-align: center;
	border: none;  
}

/*
	The #cancelButton_01 is a CSS selector that targets an HTML element with the ID
	"cancelButton_01". The provided CSS code "text-decoration: none;" removes the default 
	underline decoration from the text of the targeted element, making it appear without 
	any underlined formatting.
*/
#cancelButton_01 {
	text-decoration: none;
}

/*
	The #cancelButtonForgotPassword_01 is a CSS selector targeting a specific button element 
	in an HTML document. The code block sets the button's display property to "block," making 
	it take up a full line. It also defines a height of 40 pixels, a width of 100%, and a 
	background color of RGB(13, 65, 255). The font family is set to Cambria, Cochin, Georgia, 
	Times, 'Times New Roman', serif, the text color is white (RGB(255, 255, 255)), and the font 
	size is responsive and adjusts based on the viewport width. The text inside the button is 
	centered using text-align: center, and it has no border or text decoration.	
*/ 
.cancelButtonForgotPassword_01 {
	display: block;
	height: 40px;
	width: 100%;
	background-color: rgb(13, 65, 255);
	font-family: Cambria, Cochin, Georgia, Times, 'Times New Roman', serif;
	color: rgb(255, 255, 255);
	font-size: clamp(12px, 2vw, 16px);
	text-align: center;
	border: none;  
	text-decoration: none;
}

/*
	The .forgotPassword_Container_01 CSS class sets a padding of 16 pixels around the 
	container element. This padding creates space between the content inside the container 
	and its edges, improving the visual appearance and legibility of the content.
*/
.forgotPassword_Container_01 {
	padding: 16px;  
}

/*
	The .forgotPassword_01 class is used to style an HTML element related to a forgot password
	feature. It sets the element to a flex container with a row wrapping layout, and a column 
	direction, allowing its child elements to be displayed in a vertical column. The font 
	family is set to a fallback list including Cambria, Cochin, Georgia, Times, 'Times New 
	Roman', serif, the text color is a shade of red (RGB 201, 24, 24), and the font size is 
	responsive, ranging from 10 pixels to 2% of the viewport width, with a maximum size of 14 
	pixels. The text is centered, and there is no text decoration applied to the element.
*/
.forgotPassword_01 {
	display: flex;
	flex-wrap: row wrap;
	flex-direction: column;	
	font-family: Cambria, Cochin, Georgia, Times, 'Times New Roman', serif;
	color: rgb(201, 24, 24);
	font-size: clamp(10px, 2vw, 14px);	
	text-decoration: none;
	text-align: center;
}

/*
	The a:hover CSS selector is used to target an anchor element (<a>) when it is being
	hovered over by the user. In this specific case, the color property is set to an RGB 
	value of (13, 65, 255), which represents a shade of blue. Therefore, when a user hovers 
	over a link, it will change its text color to this blue shade.	
*/
a:hover {
	color: rgb(13, 65, 255);
}

#memberQuestion_01 {
	display: flex;
	flex-wrap: row wrap;
	flex-direction: column;	
	font-family: Cambria, Cochin, Georgia, Times, 'Times New Roman', serif;
	color: rgb(201, 24, 24);
	font-size: clamp(10px, 2vw, 14px);	
	text-decoration: none;
	text-align: center;
}

/* The Login form (background) */
.forgotpassword_Form_01 {
	display: none; /* Hidden by default */
	position: fixed; /* Stay in place */
	z-index: 1; /* Sit on top */
	left: 0;
	top: 0;
	width: 100%; /* Full width */
	height: 100%; /* Full height */
	overflow: auto; /* Enable scroll if needed */
	background-color: rgb(255, 255, 255); /* Fallback color */
	background-color: rgb(255, 255, 255); /* Black w/ opacity */
	padding-top: 45px;
	
}

/* Form Login Content/Box */
.form_ForgotPassword_01 {
	background-color: #fefefe;
	margin: 5% auto 15% auto; /* 5% from the top, 15% from the bottom and centered */
	border: 2px solid rgb(13, 65, 255);
	width: 60%; /* Could be more or less, depending on screen size */
}

/* Add Zoom Animation */
.animate {
	-webkit-animation: animatezoom 0.6s;
	animation: animatezoom 0.6s
}
  
@-webkit-keyframes animatezoom {
	from {-webkit-transform: scale(0)} 
	to {-webkit-transform: scale(1)}
}
	
@keyframes animatezoom {
	from {transform: scale(0)} 
	to {transform: scale(1)}
}

#titleForgotPassword_01 {
	display: flex;
	flex-wrap: row wrap;
	flex-direction: column;
	background-color: rgb(255, 255, 255); 
	text-align: center;
	font-family: 'Megrim-Regular', Cambria, Cochin, Georgia, Times, 'Times New Roman', serif;
	font-size: clamp(12px, 2vw, 25px);
	color: rgb(201, 24, 24);  
	justify-content: center;  
	border: none;  
}

/* 
    Extra large devices (large laptops and desktops, 1200px and up)
*/
@media only screen and (min-width: 1200px) {
    #flex_Container {
      width: 100%;
    }
}

/* 
    Large devices (laptops/desktops, 992px and up) 
*/
@media only screen and (min-width: 992px) {
    #flex_Container {
      width: 100%;
    }
}

/* 
    Medium devices (landscape tablets, 768px and up)
*/
@media only screen and (min-width: 768px) {
    #flex_Container {
      width: 100%;
    }
}

/* 
    Small devices (portrait tablets and large phones, 600px and up)
*/
@media only screen and (min-width: 600px) {
    #flex_Container {
      width: 100%;
    }
}
  
/* 
    Extra small devices (phones, 600px and down)
*/
@media only screen and (max-width: 600px) {
    #flex_Container {
      width: 100%;
    }

	#emailForgotPassword_01 {
		margin-right: 0px;
		margin-left: 0px;
		width: 100%;
	}

	label {
		margin-right: 0px;
		margin-left: 0px;
	}

	#userEmailForgotPassword_01ErrorMessage {
		margin-right: 0px;
		margin-left: 0px;
	}
}

/* 
    On screens that are 992px wide or less, go from four columns to two columns
*/
@media screen and (max-width: 992px) {
    #flex_Container_Row {
      flex: 50%;
    }
  }
  
/* 
    On screens that are 600px wide or less, make the columns stack on top of each other instead
    of next to each other 
*/
  @media screen and (max-width: 600px) {
    #flex_Container_Column {
      flex-direction: column;
    }
  }