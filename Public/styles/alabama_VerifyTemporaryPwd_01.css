/*
    This CSS style language codes defines a custom font family called "Megrim-Regular"
    and specifies the path for the font file in the "src" property. The "font-weight"
    property sets the font weight to "normal."
*/
@font-face {
	font-family: "Megrim-Regular";
	src: url(../fonts/Source_Code_Pro/SourceCodePro-SemiBold.ttf) format('truetype');
	font-weight: normal;
  }
  
  /*
	  The CSS styles in this code block are used to create a flexible container with a red
	  background color, center-aligned content, and a row direction. The "flex-wrap: wrap"
	  property allows the container to wrap its items onto multiple lines if necessary. The
	  "align-items: center" and "justify-content: center" properties ensure that the items are
	  both vertically and horizontally centered within the container.
  */
  #flex_Container {
	display: flex;
	flex-wrap: wrap;
	flex-direction: row;
	background-color: rgb(201, 24, 24);
	align-items: center;
	justify-content: center;
  }
  
  /*
	This CSS style defines a flexible container with a horizontal layout that wraps its content
	if necessary. It also sets the container to stretch its items to fit the full width of the
	container. Overall, this style is designed to create a responsive and adaptive layout for
	web page elements.
  */
  #flex_Container_Row {
	display: flex;
	flex-direction: row;    
	flex-wrap: wrap;
	align-items: stretch;
	width: 100%;
  }
  
  /*
	The CSS code style aims to apply the flexbox layout to all direct child div elements of a
	container with an ID of "flex_Container_Row". The "flex: 1" property assigns equal flex grow
	value to each child element, allowing them to fill the available horizontal space evenly.
  */
  #flex_Container_Row > div {
	display: flex;
	flex: 1;  
  }
  
  /*
	The CSS style defines how to create a flex container with a column layout. The "display:
	flex" property specifies that the container should use flexbox layout, while "flex-direction:
	column" arranges the flex items vertically. Finally, "flex-basis: 100%" sets the initial size
	of the flex items to 100% of the container's width.
  */
  #flex_Container_Column {
	display: flex;
	flex-direction: column;
	flex-basis: 100%;  
  }
  
  /*
	This CSS style is used to create a flexible layout with a container element and multiple
	child elements displayed as columns. The "flex" property is used to distribute the available
	space among the child elements evenly, and the "display" property is set to "flex" to enable
	flexbox layout.
  */
  #flex_Container_Column > div {
	display: flex;
	flex: 1;
  }
  
  /*
	The CSS style code sets the properties of an HTML element with the ID "first_Column" to create
	a flexible container that wraps its contents in a column layout. The style also defines the
	background color, height, width, text alignment, margin, padding, font family, size, and color
	of the element, as well as its content justification and absence of a border.
  */
  #first_Column {
	display: flex;
	flex-wrap: row wrap;
	flex-direction: column;
	background-color: rgb(255, 255, 255); 
	text-align: left;
	font-family: 'Megrim-Regular', Cambria, Cochin, Georgia, Times, 'Times New Roman', serif;
	font-size: clamp(12px, 2vw, 16px);
	color: rgb(13, 65, 255);  
	justify-content: left;  
	border: none;
}

.hr_Red_line_01 {
	border-color: rgb(201, 24, 24); 
	border-style: solid;
	border-left: none;
	border-right: none;
	margin-top: 5px;
	margin-bottom: 5px;
}

#hr_Blue_line_02 {
    border-color: rgb(13, 65, 255); 
    border-style: solid;
    border-left: none;
    border-right: none;
    margin-top: 5px;
    margin-bottom: 5px;
}

label {
	display: flex;
	flex-wrap: row wrap;
	flex-direction: column;
	font-family: 'Megrim-Regular', Cambria, Cochin, Georgia, Times, 'Times New Roman', serif;
	font-size: clamp(12px, 2vw, 16px); 
	color: rgb(13, 65, 255); 
	background-color: inherit;
	white-space: normal;  
	margin-left: 15px;
	margin-right: 15px;
}

#emailVerifyTempPwdLogIn_01, #temporaryPassword_VerifyTempPwdLogIn_01 {
	outline: none; 
	border-top-style: hidden;
	border-right-style: hidden;
	border-left-style: hidden;
	border-bottom-style: solid;
	color: rgb(13, 65, 255);
	background-color: inherit;
	width: 95%;    
	margin-top: 5px; 
	margin-right: 15px;   
	margin-bottom: 5px;
	margin-left: 15px;
	border-color: rgb(13, 65, 255);
	font-family: 'Megrim-Regular', Cambria, Cochin, Georgia, Times, 'Times New Roman', serif;
	font-size: clamp(12px, 2vw, 16px);
	cursor: pointer;
	cursor: 14px;  
	
}
  
#emailVerifyTempPwdLogIn_01, #temporaryPassword_VerifyTempPwdLogIn_01 {
	display: flex;
	flex-wrap: row wrap;
	flex-direction: column;
	font-family: Cambria, Cochin, Georgia, Times, 'Times New Roman', serif;
	font-size: clamp(12px, 2vw, 16px); 
	color: rgb(13, 65, 255); 
	background-color: inherit;
	white-space: normal;
	
}  

#emailVerifyTempPwdLogIn_01, #temporaryPassword_VerifyTempPwdLogIn_01 {
	-webkit-transition: 0.5s;
	transition: 0.5s;
}  

#emailVerifyTempPwdLogIn_01:focus, #temporaryPassword_VerifyTempPwdLogIn_01:focus{
	border:3px solid rgb(205, 214, 249);
	border-top-style: hidden;
	border-right-style: hidden;
	border-left-style: hidden;
	border-bottom-style: solid;
	background-color: rgba(205, 220, 235, 0.20);    
	width: 75%;  
}
  
#userEmailVerifyTempPwdLogIn_01ErrorMessage, #usertemporaryPassword_VerifyTempPwdLogIn_01ErrorMessage { 
	font-family: Cambria, Cochin, Georgia, Times, 'Times New Roman', serif;
	font-size: clamp(9px, 2vw, 13px); 
	color: rgb(201, 24, 24);    
	text-align: left;
	white-space: normal; 
	margin-left: 15px;
	margin-right: 15px;
	overflow: hidden;
	word-wrap: break-word;
}

#verifyTempPwdlogInSubmitButton {
	display: block;
	height: 40px;
	width: 100%;
	background-color: rgb(201, 24, 24);
	font-family: Cambria, Cochin, Georgia, Times, 'Times New Roman', serif;
	color: rgb(255, 255, 255);
	font-size: clamp(12px, 2vw, 16px);
	text-align: center;
	border: none;  
}

#cancelButton_01 {
	text-decoration: none;
}
 
.cancelButtonVerifyTempPwdLogIn_01 {
	display: block;
	height: 40px;
	width: 100%;
	background-color: rgb(13, 65, 255);
	font-family: Cambria, Cochin, Georgia, Times, 'Times New Roman', serif;
	color: rgb(255, 255, 255);
	font-size: clamp(12px, 2vw, 16px);
	text-align: center;
	border: none;  
	text-decoration: none;
}

.verifyTempPwdLogIn_Container_01 {
	padding: 16px;  
}

.verifyTempPwdLogIn_01 {
	display: flex;
	flex-wrap: row wrap;
	flex-direction: column;	
	font-family: Cambria, Cochin, Georgia, Times, 'Times New Roman', serif;
	color: rgb(201, 24, 24);
	font-size: clamp(10px, 2vw, 14px);	
	text-decoration: none;
	text-align: center;
}

a:hover {
	color: rgb(13, 65, 255);
}

#memberQuestion_01 {
	display: flex;
	flex-wrap: row wrap;
	flex-direction: column;	
	font-family: Cambria, Cochin, Georgia, Times, 'Times New Roman', serif;
	color: rgb(201, 24, 24);
	font-size: clamp(10px, 2vw, 14px);	
	text-decoration: none;
	text-align: center;
}

/* The Login form (background) */
.verifyTempPwdLogIn_Form_01 {
	display: none; /* Hidden by default */
	position: fixed; /* Stay in place */
	z-index: 1; /* Sit on top */
	left: 0;
	top: 0;
	width: 100%; /* Full width */
	height: 100%; /* Full height */
	overflow: auto; /* Enable scroll if needed */
	background-color: rgb(255, 255, 255); /* Fallback color */
	background-color: rgb(255, 255, 255); /* Black w/ opacity */
	padding-top: 45px;
	
}

/* Form Login Content/Box */
.form_VerifyTempPwdLogIn_01 {
	background-color: #fefefe;
	margin: 5% auto 15% auto; /* 5% from the top, 15% from the bottom and centered */
	border: 2px solid rgb(13, 65, 255);
	width: 60%; /* Could be more or less, depending on screen size */
}

/* Add Zoom Animation */
.animate {
	-webkit-animation: animatezoom 0.6s;
	animation: animatezoom 0.6s
}
  
@-webkit-keyframes animatezoom {
	from {-webkit-transform: scale(0)} 
	to {-webkit-transform: scale(1)}
}
	
@keyframes animatezoom {
	from {transform: scale(0)} 
	to {transform: scale(1)}
}

#titleVerifyTempPwdLogIn_01 {
	display: flex;
	flex-wrap: row wrap;
	flex-direction: column;
	background-color: rgb(255, 255, 255); 
	text-align: center;
	font-family: 'Megrim-Regular', Cambria, Cochin, Georgia, Times, 'Times New Roman', serif;
	font-size: clamp(12px, 2vw, 25px);
	color: rgb(201, 24, 24);  
	justify-content: center;  
	border: none;  
}

#showVerifyTempPwdHideLogIn_01 {
	display: flex;
	flex-wrap: row wrap;
	flex-direction: column;
	font-family: Cambria, Cochin, Georgia, Times, 'Times New Roman', serif;
	color: rgb(201, 24, 24);
	font-size: clamp(10px, 2vw, 14px);	
	background-color: inherit;
	white-space: normal;  
	text-decoration: none;
	cursor: pointer;
	cursor: 14px; 
	float: right;
}
  


.forgotPassword_SignUp_01 {
	display: flex;
	flex-wrap: row wrap;
	flex-direction: column;	
	font-family: Cambria, Cochin, Georgia, Times, 'Times New Roman', serif;
	color: rgb(201, 24, 24);
	font-size: clamp(10px, 2vw, 14px);	
	text-decoration: none;
}

.forgotPassword_SignUp_01 a:hover {
    color: rgb(13, 65, 255);
}



/* 
    Extra large devices (large laptops and desktops, 1200px and up)
*/
@media only screen and (min-width: 1200px) {
    #flex_Container {
      width: 100%;
    }
}

/* 
    Large devices (laptops/desktops, 992px and up) 
*/
@media only screen and (min-width: 992px) {
    #flex_Container {
      width: 100%;
    }
}

/* 
    Medium devices (landscape tablets, 768px and up)
*/
@media only screen and (min-width: 768px) {
    #flex_Container {
      width: 100%;
    }
}

/* 
    Small devices (portrait tablets and large phones, 600px and up)
*/
@media only screen and (min-width: 600px) {
    #flex_Container {
      width: 100%;
    }
}
  
/* 
    Extra small devices (phones, 600px and down)
*/
@media only screen and (max-width: 600px) {
    #flex_Container {
      width: 100%;
    }

	#emailVerifyTempPwdLogIn_01, 
	#temporaryPassword_VerifyTempPwdLogIn_01 {
		margin-right: 0px;
		margin-left: 0px;
		width: 100%;
	}

	label {
		margin-right: 0px;
		margin-left: 0px;
	}

	#userEmailVerifyTempPwdLogIn_01ErrorMessage,
	#usertemporaryPassword_VerifyTempPwdLogIn_01ErrorMessage {
		margin-right: 0px;
		margin-left: 0px;
	}
}

/* 
    On screens that are 992px wide or less, go from four columns to two columns
*/
@media screen and (max-width: 992px) {
    #flex_Container_Row {
      flex: 50%;
    }
  }
  
/* 
    On screens that are 600px wide or less, make the columns stack on top of each other instead
    of next to each other 
*/
  @media screen and (max-width: 600px) {
    #flex_Container_Column {
      flex-direction: column;
    }
  }