/*
    This CSS style language codes defines a custom font family called "Megrim-Regular"
    and specifies the path for the font file in the "src" property. The "font-weight"
    property sets the font weight to "normal."
*/
@font-face {
	font-family: "Megrim-Regular";
	src: url(../fonts/Source_Code_Pro/SourceCodePro-SemiBold.ttf) format('truetype');
	font-weight: normal;
} 
  
.hr_Red_line_01 {
	border-color: rgb(201, 24, 24); 
	border-style: solid;
	border-left: none;
	border-right: none;
	margin-top: 5px;
	margin-bottom: 5px;
} 

.hr_Grey_line_01 {
	border-color: rgb(205, 214, 249); 
	border-style: solid;
	border-left: none;
	border-right: none;
	margin-top: 5px;
	margin-bottom: 5px;
} 
  
  /*
	  The CSS styles in this code block are used to create a flexible container with a red
	  background color, center-aligned content, and a row direction. The "flex-wrap: wrap"
	  property allows the container to wrap its items onto multiple lines if necessary. The
	  "align-items: center" and "justify-content: center" properties ensure that the items are
	  both vertically and horizontally centered within the container.
  */
  #flex_Container {
	display: flex;
	flex-wrap: wrap;
	flex-direction: row;
	background-color: transparent;
	align-items: center;
	justify-content: center;
  }
  
  /*
	This CSS style defines a flexible container with a horizontal layout that wraps its content
	if necessary. It also sets the container to stretch its items to fit the full width of the
	container. Overall, this style is designed to create a responsive and adaptive layout for
	web page elements.
  */
  #flex_Container_Row {
	display: flex;
	flex-direction: row;    
	flex-wrap: wrap;
	align-items: stretch;
	width: 100%;
  }
  
  /*
	The CSS code style aims to apply the flexbox layout to all direct child div elements of a
	container with an ID of "flex_Container_Row". The "flex: 1" property assigns equal flex grow
	value to each child element, allowing them to fill the available horizontal space evenly.
  */
  #flex_Container_Row > div {
	display: flex;
	flex: 1;  
  }
  
  /*
	The CSS style defines how to create a flex container with a column layout. The "display:
	flex" property specifies that the container should use flexbox layout, while "flex-direction:
	column" arranges the flex items vertically. Finally, "flex-basis: 100%" sets the initial size
	of the flex items to 100% of the container's width.
  */
  #flex_Container_Column {
	display: flex;
	flex-direction: column;
	flex-basis: 100%;  
  }
  
/*
This CSS style is used to create a flexible layout with a container element and multiple
child elements displayed as columns. The "flex" property is used to distribute the available
space among the child elements evenly, and the "display" property is set to "flex" to enable
flexbox layout.
*/
#flex_Container_Column > div {
	display: flex;
	flex: 1;
}

/*
    The CSS style language codes sets a blue solid border for an HTML element identified
    by "hr_Blue_line_02", while removing the left and right borders. Additionally, it adds
    a top and bottom margin of 5 pixels to the element. This styling is used to
    create a visual separation between sections on the webpage.
*/

.hr_Blue_line_02 {
    border-color: rgb(13, 65, 255); 
    border-style: solid; 
    border-left: none;
    border-right: none;
    margin-top: 5px;
    margin-bottom: 5px;
    width: auto;
}

.hr_Red_line_02 {
    border-color: rgb(201, 24, 24); 
    border-style: solid; 
    border-left: none;
    border-right: none;
    margin-top: 5px;
    margin-bottom: 5px; 
    width: auto;
}  

.hr_Grey_line_02 {
    color: rgb(195, 195, 195);
    border-style: solid; 
    border-left: none;
    border-right: none;
    margin-top: 5px;
    margin-bottom: 5px;
    width: auto;
}

/*
    This CSS styling for the .header_Image_01 element on the homepage sets it to display as
    a flex container with column direction, centers the content, and applies a blue color with
    transparent background. The width is set to a minimum of 125 pixels and maximum of 250
    pixels, with a fluid scaling between 3 viewport units.
*/
.header_Image_01 {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    color: rgb(13, 65, 255);
    text-align: center;
    line-height: none;
    margin-top: 15px;
    margin-bottom: auto;
    padding-right: 5px;
    background-color: rgb(255, 255, 255);
    width: clamp(100px, 2vw, 250px); 
}

#titleEmployees_01 {
	display: flex;
	flex-wrap: row wrap;
	flex-direction: column;
	background-color: rgb(255, 255, 255); 
	text-align: center;
	font-family: 'Megrim-Regular', Cambria, Cochin, Georgia, Times, 'Times New Roman', serif;
	font-size: clamp(15px, 2vw, 25px);
	color: rgb(201, 24, 24);  
	justify-content: center;  
	border: none;  
}

